
//------------------------------------------------------------------
// NOTE: The fsm name below MUST be changed in order for the
// script to be considered a unique entity!

fsm patrol : integer;


//------------------------------------------------------------------
// Patrol:
//   This script controls the Mechs that are patrolling the Air Base
//------------------------------------------------------------------


//------------------------------------------------------------------
//     Constants
//------------------------------------------------------------------

	const
		#include_ <content\ABLScripts\mwconst.abi>

//------------------------------------------------------------------
//     Types
//------------------------------------------------------------------

	type
		#include_ <content\ABLScripts\mwtype.abi>
	

//------------------------------------------------------------------
//     Variables
//------------------------------------------------------------------

	var
    // Standard Mech and Vehicle variables
        static integer			attackRange;		// At what range do I start shooting?
		static integer			withdrawRange;		// At what range do I withdraw from combat completely?
                                                    //
		static integer			piloting;			// Piloting skill
		static integer			gunnery;			// Gunnery skill/chance to hit
		static real				minDelay;			// Minimum amount of time I will wait between shots once a weapon is reloaded
		static real				maxDelay;			// Maximum amount of time I will wait between shots once a weapon is reloaded
		static integer 			eliteLevel;			// Elite level.  This helps determine tactics, defensive manuevers, opportunity fire
													// and other things.  It indicates a general level of combat experience.
		static integer			attackThrottle;		// My attack throttle
		static integer			findTypes;			// What kind of enemies to look for
        static integer			path;	            // What path to take.
        static integer			speed;	            // Speed on the path.
                                                    //
 		static integer			isShotRadius;		// How far away from me will I detect an enemy shot?
                                                    //
		static integer 			attackSound;		// The attack sound I play when I first attack
		static integer 			deathSound;			// The sound I play when I die
		                                            //
		static integer			mood;				// My default 
		static integer			takeOffDistance;	// My take-off distance if I'm an airplane (ignored if not an airplane)
    //

        static boolean          timeroff;           // The shutdown timer is now counting.
        static boolean          eastpatrol;         // This indicates this Mech is in the East Patrol
        static boolean          noalarm;            // One patrol will stay next to the base

//------------------------------------------------------------------
//     Init: my initialization function
//------------------------------------------------------------------

function Init;
	code
		// script-specific variables
		attackRange		= 900;
		withdrawRange	= attackRange * 3 / 2;
		takeOffDistance	= 150;

		// driver settings
		piloting		= 80;
		gunnery			= 60;
		minDelay		= 0.7;
		maxDelay		= 1.6;
		eliteLevel		= 40;
		attackThrottle	= 70;
		isShotRadius	= 120;
		attackSound		= -1; // no sound
		deathSound		= -1; // no sound
		mood			= NEUTRAL_START;
		findTypes		= FT_DEFAULT;
        path            = -1;
        speed =     90;

	switch (getmemoryinteger(me,9))

    	case 1:
    		path            = epa_northpatrol;
     	endcase;
    	
    	case 2:
    		path            = epa_southpatrol;
            noalarm         = true;
     	endcase;

	endswitch;
    
endfunction;

//------------------------------------------------------------------
//	StartState: my initial state
//------------------------------------------------------------------

state StartState;

	code
		SetFiringDelay			(ME,minDelay,maxDelay);
		SetIgnoreFriendlyFire	(ME,true);
		SetIsShotRadius			(ME,isShotRadius);
		SetEntropyMood			(ME,mood);
		SetCurMood				(ME,mood);
		SetSkillLevel			(ME,piloting,gunnery,eliteLevel);
		SetAttackThrottle		(ME,attackThrottle);
        
        trans WaitState;

endstate;

//------------------------------------------------------------------
//	WaitState: wait for something to shoot
//------------------------------------------------------------------

state WaitState;
	code
        
        OrderMoveTo(path,speed,move_circle,false,false);

        if (not noalarm) then
            if (alarm) then
                trans gettoplayer;
            endif;
        endif;
        
        if (FindEnemy(attackRange,findTypes)) then
		 	trans AttackState;
		endif;		
        
endstate;

//------------------------------------------------------------------
//	Gettoplayer: Run Over to the Player
//------------------------------------------------------------------

state Gettoplayer;
	code
        		
        if (FindEnemy(attackRange,findTypes)) then
            trans AttackState;
		endif;

		OrderMovetoObject(playermech,600);
		
endstate;

//------------------------------------------------------------------
//	AttackState: look for something to shoot
//------------------------------------------------------------------

state AttackState;
	code
        firstspot = true;

        if (LeaveAttackState(withdrawRange)) then
			OrderStopAttacking;
			SetTarget(ME,NO_UNIT);
			trans gettoplayer;
		endif;

        // OrderAttackTactic(TACTIC_SNIPE,true);
        OrderAttack(true);
		// OrderAttack(true);

endstate;

//------------------------------------------------------------------
//	DeadState: OK, I kicked the bucket.
//------------------------------------------------------------------

state DeadState;
	code
		if (deathSound <> -1) then	
			PlaySoundOnce(deathSound);
		endif;		

		orderDie;

endstate;


endfsm.

