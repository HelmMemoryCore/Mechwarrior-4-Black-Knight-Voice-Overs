
//*********************************************************************************
//The below line MUST be changed in order for the script to be considered
//a unique entity.  The word Patrol must be changed to some other unique identifier
fsm Mn04_MechEnemy : integer;

//This unit patrols a specific path and attacks anything that comes near it.
//------------------------------------------------------------------
//
//     Constant Definitions
//
//------------------------------------------------------------------
	const
		#include_ <content\ABLScripts\mwconst.abi>

//------------------------------------------------------------------
//
//     Type Definitions
//
//------------------------------------------------------------------
	type
		#include_ <content\ABLScripts\mwtype.abi>
	

//------------------------------------------------------------------
//
//     Variable Declarations
//
//------------------------------------------------------------------
	var
	static integer			attackrange; 			// When do I start shooting?
																
	static integer			piloting; 				// piloting skill
	static integer			gunnery; 					// hit chance,
	static real					mindelay;					// minimum amount of time I will wait between shots once a weapon is reloaded
	static real					maxdelay;					// maximum amount of time I will wait between shots once a weapon is reloaded
	static integer 			speed;			 			// What speed so I move at?
	static integer			attackThrottle;
	static integer 			elitelevel; 			// % elite chance, This helps determine tactics, defensive manuevers, opportunity fire
																				// and other things that would normally be determined by combat experience

 	static integer			isshotradius;			// how far away from me will I detect an enemy shot.
	static integer			movetype;					// how will it move down the path?

	static Boolean 			attacksoundplayed;
	static integer 			attacksound; 			// plays when it first attacks
	static integer 			deathsound; 			// plays when it dies
	
	static integer			mood;							// What is my normal mood?
	
	static Boolean			Resumed;					// Have I gotten to the end of the path?
	static Boolean			reachedendofpath;			// Have I gotten to the end of the path?
																						// Note: This only gets set if movetype is set to move_nocycle.
	static integer			path;						 			// what path am I following?
	static Boolean 			attackersdistractit;	// if FALSE, it won't leave the path, even when things
																						// are shooting it. It will shoot back. Defaults to true
																						// Once unit reaches the end of the path, It attacks freely.
	static Boolean 			Chaser;								// These guys will give chase
	static Boolean 			Elite;								// Left from other script
	static Boolean 			Secret;								// Shutdown to start for ambush or to save CPU time
	
	static integer			teleportNav;					// All the elites will have this value set to a different Nav
	
	static ObjectID 		myVehicle;
	static Locpoint 		myStart;						//	where I begin the game
	static Boolean			MyTrigger;					// What Global Boolean Sets me off?
	static Boolean 			GPatrol;						// Gamma Patrol Mechs
	static Boolean 			Prize;							// Prize Mechs
	
	static Boolean 			AlertSound;					// Has Olson's alert been played
//------------------------------------------------------------------
//
//     Local Functions
//
//------------------------------------------------------------------

function init;
	code
	
	Elite 								= FALSE;
	Secret 								= FALSE;
	GPatrol 							= FALSE;
	Prize 								= FALSE;
	 				
 	switch (GetMemoryInteger(me,9))

	case 20:															 //Retreat When 2 dead of grp 20
			
		attackrange         = 850;
		piloting            = 10;
		gunnery             = 50;						//was 75 8/19
		mindelay            = 0.5;
		maxdelay            = 1.0;
		speed               = 70;           //was 100 8/19
		attackThrottle		= 60;
		elitelevel          = 45;           //was 80 8/19
		IsShotRadius        = 80;
		movetype 						= move_circle;
		AttackersDistractIt = True;
		Mood                = neutral_start;
		path 				= -1;   //= epa_Path_Beta;
		ReachedEndOfPath    = False;
		Resumed             = False;
		Attacksoundplayed   = False;
		myTrigger						=	RetreatTime;
		
	endcase;
		
	case 26:						 									// Assaults near Delta
		
		attackrange         = 950;
		piloting            = 30;
		gunnery             = 50;           //was 70 8/19
		mindelay            = 0.5;
		maxdelay            = 1.5;
		speed               = 70;           //was 60 8/19
		attackThrottle		= 60;
		elitelevel          = 50;           //was 70 8/19
		IsShotRadius        = 80;
		movetype 						= move_circle;
		AttackersDistractIt = True;
		Mood                = neutral_start;
		path 								= epa_Path_Delta;	 //-1
		ReachedEndOfPath    = False;
		Resumed             = False;
		Attacksoundplayed   = False;
		MyTrigger						= OnBase;
		
	endcase;
		
  /*  case 30:															 // GammaPatrol who helps at end of mission
	
		attackrange         = 900;
		piloting            = 70;
		gunnery             = 80;
		mindelay            = 0.5;
		maxdelay            = 1.0;
		speed               = 60;
		elitelevel          = 60;
		IsShotRadius        = 80;
		movetype 						= move_circle;
		AttackersDistractIt = True;
		Mood                = neutral_start;
		path 								= epa_Path_Gamma;						 //
		ReachedEndOfPath    = False;
		Resumed             = False;
		Attacksoundplayed   = False;
		MyTrigger						= LaunchTime;
		GPatrol 						= TRUE;
		Secret 							= TRUE;						//for fifield
		
	endcase;     */
 	
	case 0:															 //Awarded Mechs at the end
			
		attackrange         = 950;
		piloting            = 70;
		gunnery             = 75;
		mindelay            = 0.5;
		maxdelay            = 1.0;
		speed               = 100;
		elitelevel          = 80;
		IsShotRadius        = 80;
		movetype 						= move_nocycle;
		AttackersDistractIt = True;
		Mood                = neutral_start;
		path 								= epa_PlayerDone;
		ReachedEndOfPath    = False;
		Resumed             = False;
		Attacksoundplayed   = False;
		Prize 							= TRUE;
		
	endcase;
		
	endswitch;
 	
endfunction;

//------------------------------------------------------------------
//
//     Main Code
//				
//								
//------------------------------------------------------------------
state startState;

	code
		SetFiringDelay					(me,mindelay,maxdelay);
		setignorefriendlyfire		(me,true);
		setisshotradius					(me,isshotradius);
		setentropymood					(me,mood);
		setcurmood							(me,mood);
		setskilllevel						(me,piloting,gunnery,elitelevel);
		setattackThrottle			(me,attackThrottle);
		//setsearchlight				(me,on);
		//startexecute					(me);
		//setalignment					(me,enemy);
		
		GetLocation(me,mystart);
		
		if (Prize == True) then
			shutdown(me);
			teleportToHell(me);
			trans hangoutElite;
		else
		if (Secret == True) then
			shutdown(me);
			trans hangoutSECRET;
		else
			trans patrol;
		endif;
		endif;

endstate;			

state deadState;
  code
		
		if (deathsound <> -1) then	
			PlaySoundOnce(deathsound);
		endif;		
						
		orderDie;
endstate;

state hangoutSECRET;
  code
		
		If ((isShot (me)))	then
			startup(me);
			MyTrigger = true;
			trans patrol;
		endif;
		
		if ((iswithin(me,(groupobjectid(1)),200)) == true) then
			startup(me);
			MyTrigger = true;
			trans patrol;
		endif;
		
		If (MyTrigger == true) then
			startup(me);
			orderMoveto(path,speed,movetype,true,true);
  		setTarget(me,playermech);
			trans patrol;
		endif;
						
		If (BetaReached == true) then
			startup(me);
			orderMoveto(path,speed,movetype,true,true);
  		setTarget(me,playermech);
			trans patrol;
		endif;
						
endstate;
	
state hangoutELITE;
  code
		
		If (GivePrize	== true) then
			startup(me);
			Teleport(me,myStart);
			orderMoveto(path,speed,movetype,true,true);
  		setTarget(me,playermech);
			trans PrizePose;
		endif;
						
endstate;
	
state PrizePose;
  code
		
		If iswithin(me,playermech,150) then
			setcrouchstate(me,true);
			trans PrizeDone;
		endif;
						
endstate;
	
state PrizeDone;
  code
		
						
endstate;
	
	state SalvageKillas;
		
		code

		speed = 600;
		
		SetTargetDesirability(myVehicle,100);
				
		//the ever popular attack order
    orderAttack (attackersdistractit);
				
		//maybe swap targets when I am shot.
		if ((isShot (me)) and (rand(0,75) <= 1)) then
  		setTarget(me,whoShot(me));
		endif;
 								
	endstate;
	
state RetreatState;
  code
		
		speed = 600;
		
			retreatdone = True;
		
		If not iswithin(me,ena_Nav_Delta,550) then
			OrderMoveToObject((ena_Nav_Delta),speed);
		else
			//Play the Voice Overs Here	
			if (setmytarget(attackrange)) then
				trans attack;
			endif;
		endif;
						
			if (setmytarget(attackrange)) then
				trans attack;
			endif;
		
		//the ever popular attack order
    orderAttack (false);
		
endstate;
	
state BackupState;
  code
		
		speed = 600;
		
		If not iswithin(me,playermech,600) then
			OrderMoveToObject((playermech),speed);
		else
			//Play the Voice Overs Here	
			if (setmytarget(attackrange)) then
				trans attack;
			endif;
		endif;
						
endstate;
	
	state patrol;

  var
    ObjectID foe;

		code

	//head down the path.  If this has already been done
	// or if there is no path set then look around.
			if ((path <> -1) and (reachedendofpath == FALSE)) then
					if ((orderMoveto(path,speed,movetype,true,true)) == TRUE) then
						reachedendofpath = TRUE;
						If (Chaser == True) then
							setTarget(me,playermech);
							trans GiveChase;
						endif; 			
					endif; 			
			else	 		 		
				ordermovelookout;			
			endif;
			
		//Find me a target
		if (setmytarget(attackrange)) then
			trans attack;
	 	endif;
		
		If GammaBackup == TRUE then
		If GammaFought == False then
			If ((GroupContainsObject(Groupobjectid(30),me)) == TRUE) then
			ClearMoveOrder(me);
				trans BackupState;
			endif; 			
		endif; 			
		endif; 			
			
			
	endstate;

//------------------------------------------------------------------
//
//     attack state : description
//
//------------------------------------------------------------------
	state attack;
		
		code
		
		speed = 80;						//Changed from 600 to 60 to keep 'em slow
		
		If RetreatTime == TRUE then
		If RetreatDone == False then
			If ((GroupContainsObject(Groupobjectid(20),me)) == TRUE) then
			ClearMoveOrder(me);
				trans RetreatState;
			endif;
		else
			AttackersDistractIt = True;
		endif; 			
		endif; 			
		
		If GammaBackup == TRUE then
		If GammaFought == False then
			If ((GroupContainsObject(Groupobjectid(30),me)) == TRUE) then
			ClearMoveOrder(me);
				trans BackupState;
			endif; 			
		endif; 			
		endif; 			
			
		If GammaFought == False then
			If ((GroupContainsObject(Groupobjectid(30),me)) == TRUE) then
				If (whoShot(me) == playermech) then
					GammaFought = True;
				endif; 			
			endif; 			
		endif; 			
		
		if (LeaveAttackState(attackrange*2)) then
			orderstopattacking;
			if ((path <> -1) and (reachedendofpath == FALSE)) then
				orderMoveResumePatrol(path,speed,movetype,true,true);
			else
				trans patrol;
			endif;
		endif;
		
		//the ever popular attack order
    orderAttack (attackersdistractit);
		
		//maybe swap targets when I am shot.
		if ((isShot (me)) and (rand(0,75) <= 1)) then
  		setTarget(me,whoShot(me));
		endif;
 								
	endstate;
  	
		state GiveChase;
		
		code

		speed = 60;						//Changed from 600 to 60 to keep 'em slow
		
		if (LeaveAttackState(attackrange*3)) then
			orderstopattacking;
			
			if ((path <> -1) and (reachedendofpath == FALSE)) then
				orderMoveResumePatrol(path,speed,movetype,true,true);
			else
				trans patrol;
			endif;
		endif;
		
		//the ever popular attack order
    orderAttack (attackersdistractit);
				
		//maybe swap targets when I am shot.
		if ((isShot (me)) and (rand(0,75) <= 1)) then
  		setTarget(me,whoShot(me));
		endif;
 								
	endstate;

endfsm.
//******************************************************************

