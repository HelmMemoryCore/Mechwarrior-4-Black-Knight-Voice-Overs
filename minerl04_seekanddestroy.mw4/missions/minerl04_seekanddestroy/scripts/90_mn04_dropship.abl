//------------------------------------------------------------------

fsm Mn04_Dropship : integer;

//------------------------------------------------------------------
//     Constants
//------------------------------------------------------------------

	const
		#include_ <content\ABLScripts\mwconst.abi>

//------------------------------------------------------------------
//     Types
//------------------------------------------------------------------

	type
		#include_ <content\ABLScripts\mwtype.abi>
	

//------------------------------------------------------------------
//     Variables
//------------------------------------------------------------------

  var		
		
		static integer			piloting;		 	 	// Piloting skill
		static integer			attackRange; 	 	// The range at which I start attacking if in the original patrol
		static integer			gunnery;		 	 	// Gunnery skill/chance to hit
		static real					minDelay;		 	 	// Minimum amount of time I will wait between shots once a weapon is reloaded
		static real					maxDelay;		 	 	// Maximum amount of time I will wait between shots once a weapon is reloaded
		
		static integer			path;						// My original path
		static integer			moveType;				// How I move along the path
		static boolean			canLeavePath;		// Can I leave the path if attacked? (TRUE by default)
		static integer			speed;					// The speed at which I move along the path
		static integer			attackThrottle;		// My attack throttle
		
		static integer 			eliteLevel;			// Elite level.  This helps determine tactics, defensive manuevers, opportunity fire
		static integer 			attackSound;		// The attack sound I play when I first attack
		static integer 			deathSound;			// The sound I play when I die
		
		static integer			mood;						// My default mood.

		static integer			takeOffDistance;	// My take-off distance if I'm an airplane (ignored if not an airplane)
		
		static locpoint			mystart;						// Where the backup guys start
		
		static Boolean			Closer;						// I do the closing cinema.
        static Boolean			firstShot;
        static Boolean			secondShot;
        static Boolean			thirdShot;
        static Boolean			Shot1;
        static Boolean			Shot2;
        static Boolean			Shot3;
        
//------------------------------------------------------------------
//     Init: my initialization function
//------------------------------------------------------------------



function Init;
	
	code
		firstshot = false;
        secondshot = false;
        thirdshot = false;
		Shot1 = false;
        Shot2 = false;
        Shot3 = false;
		
		
 	switch (GetMemoryInteger(me,9))

	case 0:															 //Opening Cinema
	
		// script-specific variables
		attackRange			= 700;
		Path 				= epa_Path_Talon;
		moveType		= move_NoCycle;
		canLeavePath	= False;
		speed			= 100;

		takeOffDistance	= 150;

		// driver settings
		piloting		= 100;
		gunnery			= 70;
		minDelay		= 0.25;
		maxDelay		= 0.75;
		eliteLevel		= 80;
		attackThrottle	= 80;
		attackSound		= -1; // no sound
		deathSound		= -1; // no sound
		mood			= NEUTRAL_START;
		//findTypes		= FT_DEFAULT;
		closer = false;
		
	endcase;
		
	case 1:															 //Closeing Cinema
		
		// script-specific variables
		attackRange			= 700;
		path = epa_Path_Hroth1;
		moveType		= move_NoCycle;
		canLeavePath	= False;
		speed			= 100;

		takeOffDistance	= 150;

		// driver settings
		piloting		= 100;
		gunnery			= 70;
		minDelay		= 0.25;
		maxDelay		= 0.75;
		eliteLevel		= 80;
		attackThrottle	= 80;
		attackSound		= -1;			 // no sound
		deathSound		= -1;			 // no sound
		mood			= NEUTRAL_START;
		//findTypes		= FT_DEFAULT;
		closer = true;
		
	endcase;
		
	case 2:															 //Cargo Carriers
		
		// script-specific variables
		attackRange			= 700;
		path = -1;
		moveType		= move_NoCycle;
		canLeavePath	= False;
		speed			= 100;

		takeOffDistance	= 1;

		// driver settings
		piloting		= 100;
		gunnery			= 70;
		minDelay		= 0.25;
		maxDelay		= 0.75;
		eliteLevel		= 80;
		attackThrottle	= 80;
		attackSound		= -1; // no sound
		deathSound		= -1; // no sound
		mood			= NEUTRAL_START;
		//findTypes		= FT_DEFAULT;
		
	endcase;
		
	endswitch;
	
endfunction;


 state StartState;

	code
		
		SetFiringDelay					(ME,minDelay,maxDelay);
		SetIgnoreFriendlyFire		(ME,true);
		SetEntropyMood					(ME,mood);
		SetCurMood							(ME,mood);
		SetSkillLevel						(ME,piloting,gunnery,eliteLevel);
		SetAttackThrottle				(ME,attackThrottle);
		
		getlocation(me,mystart);
		
		if (GetMemoryInteger(me,9) == 0) then		
				shutdown(me);
				TeleportToHell(me);		
			trans WaitTalon;
		else
			if (GetMemoryInteger(me,9) == 1) then		
					shutdown(me);
				trans WaitHroth;
			else
				trans CargoWait;
			endif;
		endif;

endstate;

state WaitTalon;
	var
		LocPoint my_nav;
	
	code
		
		If (TalonLaunch == true) and (Objective2Win == true) then
			startup(me);
			Teleport(me,mystart);
    		ResetTimer(15);								//Dropship Timer
    		starttimer(gti_timer_15);
            trans LaunchTalon;
		endif;

endstate;

state WaitHroth;
	code
	
		If (HrothLaunch == true) then
			startup(me);
				//PlayVoiceOverOnce("vox\op2\mi5\errand", TALKER_CAS);			//
			trans LaunchHroth;
		endif;

endstate;

state LaunchTalon;
	code
	
		if (orderTakeOff(300) == true) then
			if OrderMoveto(path,speed,movetype,true,false) then
			endif;
		endif;
		
		if (TimeGreater(gti_Timer_15,2)) then
			if HrothDead == true then
				trans land;
			endif;
		endif;
		
		if (TimeGreater(gti_Timer_15,2)) then
			trans shoot;
		endif;
endstate;

state LaunchHroth;
	code
	
		if (orderTakeOff(620) == true) then
			TakeOffDone = true;
			if OrderMoveto(path,speed,movetype,true,false) then
			endif;
		endif;

		if (TimeGreater(gti_Timer_15,8)) then
			TakeOffDone = true;
			trans destroystate;
		endif;
endstate;

state Shoot;
	code
		
		if (orderTakeOff(300) == true) then
			if OrderMoveto(path,speed,movetype,true,false) then
			endif;
		endif;

		if (not isdead(eve_Hrothgar)) then
			setmytarget(eve_Hrothgar);
			orderattack(false);
		else
			trans Land;
		endif;

endstate;

state Destroystate;
	code
	
			//SetGUITarget(playermech,eve_Talon);    Fifield rem'd
			TakeOffDone = true;
        
        if (firstShot == true) then   
                firstShot = FALSE;
            playeffect(ede_Effect_Killa);
        endif; 
        if (secondShot == true) then   
                secondShot = FALSE;
			killeffect(ede_Effect_Killa);
              playeffect(ede_Effect_Killa2);
        endif; 
        if (thirdShot == true) then   
                thirdShot = FALSE;
			killeffect(ede_Effect_Killa2);
        	   playeffect(ede_Effect_Killa3);
        endif; 
        
        if (Shot1 == False) then   
            if (TimeGreater(gti_Timer_15,9)) then
                Shot1 = true;
                firstShot = true;
            endif; 
        endif; 
        if (Shot2 == False) then   
    		if (TimeGreater(gti_Timer_15,13)) then
                Shot2 = true;
                secondShot = true;
            endif; 
        endif; 
        if (Shot3 == False) then   
    		if (TimeGreater(gti_Timer_15,17)) then
                Shot3 = true;
                thirdShot = true;
            endif; 
        endif; 
        
                 
        if (TimeGreater(gti_Timer_15,20)) then
            HrothDead = true;
            TurnerKilled = TRUE;	
            //playeffect(ede_Effect_Killa);           //mike to change
            if (TimeGreater(gti_Timer_15,20)) then
                destroy (eve_Hrothgar);
                trans Done;
            endif;
        endif;

endstate;

state Land;
	code
		
		
		if iswithin(me,ena_TalonLand,50) then
			If (orderland == true) then
				GivePrize = TRUE;
				//PlayVoiceOverOnce("VO\OP2\MI1\TouchingDown", TALKER_Fo1);
				trans landwait;
			endif;
		else
			if OrderMoveto(path,speed,movetype,true,false) then
			endif;
		endif;

endstate;

state Done;
	code
		HrothDead = true;
		
		//ResetTimer(15);								//Dropship Timer
		//starttimer(gti_timer_15);
		shutdown(me);
	//trans DropLaunch;

endstate;

state PowerUp;
	code
	
		//ResetTimer(15);								//Dropship Timer
		//starttimer(gti_timer_15);
		shutdown(me);
	//trans DropLaunch;

endstate;

state DropLaunch;
	code
	
	if (closer == true) then
	  shutdown(me);
		trans hellstate;
	else
		if (orderTakeOff(620) == true) then
			if OrderMoveto(path,speed,movetype,true,false) then
			endif;
		endif;

	OrderAttack(false);	
	
		if (TimeGreater(gti_Timer_15,12)) then
		shutdown(me);
		trans HellState1;
		endif;
	endif;
	
endstate;

state WaitState;
	code
		
		shutdown(me);
	
		if (missionwon == true) then
			startup(me);
			resettimer(15);
			trans waitstate2;
		endif;		
		
endstate;

state WaitState2;
	code
			
		if (orderTakeOff(65) == true) then
			if OrderMoveto(path,speed,movetype,true,false) then
			endif;
		endif;
			
		if (TimeGreater(gti_Timer_15,4)) then
			clearmoveorder(me);
			trans WaitState3;
		endif;

endstate;

state WaitState3;
	code
			
		if OrderMoveToObject(ena_Nav_Beta,200) == true then
			trans WaitState4;
		endif;
			
endstate;

state WaitState4;
	code
		
		If (orderland == true) then
		PlayVoiceOverOnce("VO\OP2\MI1\TouchingDown", TALKER_Fo1);
			trans landwait;
		endif;
		
endstate;

state HellState;
	code
		
	TeleportToHell(me);		
		
		trans WaitState;
		
endstate;

state DeadState;
	code
		
			if (TimeGreater(gti_Timer_19,53)) then
				LaunchedAll = TRUE;											
				Wait2Win			= TRUE;
			endif;
		
		//orderDie;

endstate;


state LandWait;
	code
	
			TalonArrived = true;																 //**************************
	
	if orderdooropen then
		//PlayVoiceOverOnce("VO\OP2\MI1\Elite", TALKER_Rat);
	endif;	

endstate;

state HellState1;
	code
		
	SetSensorVisibility(me,false);
	
	TeleportToHell(me);		
	
	trans deadstate;
		
endstate;

state CargoWait;
  code
	
	If IsShot(me) then;
		LaunchTime 	= TRUE;
	endif;
	
	If GroupNumDead(GroupObjectID(86)) > 0 then;
		LaunchTime 	= TRUE;
	endif;
	
	If (LaunchTime == TRUE) then
			SetSensorVisibility(GroupObjectID(86),true);
		ResetTimer(19);								//TakeOff Timer
		starttimer(gti_timer_19);
			PlayVoiceOverOnce("vox\op1\mi4\getpods2", TALKER_MAN);			//
			PlayVoiceOverOnce("vox\op1\mi4\getpods", TALKER_LAW);			//
			PlayVoiceOverOnce("vox\op1\mi4\getpods", TALKER_ERI);			//
		Trans CargoLaunch;
	endif;

endstate;			
	
state CargoLaunch;
  code
	
		If (GetLancemate(1) <> NO_UNIT) then
			SetTarget(GroupObjectId(1),GroupObjectId(86));
		endif;
	
	switch (GetMemoryInteger(me,8))

		case 1:											//	Cargo First Squad
						if (TimeGreater(gti_Timer_19,1)) then											
							if (orderTakeOff(takeOffDistance) == true) then	
								trans PostLaunch;	
							endif;
						endif;
		endcase;
		
		case 2:										//	
						if (TimeGreater(gti_Timer_19,14)) then							 //added 4 on 9-4 			
							if (orderTakeOff(takeOffDistance) == true) then	
								trans PostLaunch;	
							endif;
						endif;
		endcase;

		case 3:											//
						if (TimeGreater(gti_Timer_19,22)) then							 //added 4 on 9-4 			
							if (orderTakeOff(takeOffDistance) == true) then	
								trans PostLaunch;	
							endif;
						endif;
		endcase;

		case 4:										//	
						if (TimeGreater(gti_Timer_19,28)) then							 //added 4 on 9-4 			
							if (orderTakeOff(takeOffDistance) == true) then	
								trans PostLaunch;	
							endif;
						endif;
		endcase;

		case 5:											//
						if (TimeGreater(gti_Timer_19,32)) then								//added 4 on 9-4			
							if (orderTakeOff(takeOffDistance) == true) then	
								trans PostLaunch;	
							endif;
						endif;
		endcase;
	
	endswitch;

endstate;

state PostLaunch;
  code
	
	switch (GetMemoryInteger(me,8))

		case 1:											//	Cargo First Squad
						if (TimeGreater(gti_Timer_19,23)) then											
								trans HellState1;	
						endif;
		endcase;
		
		case 2:										//	
					//PlayVoiceOverOnce("vox\op1\mi4\getpods", TALKER_MAN);			//when revealed
				LaunchedHalf = TRUE;
						if (TimeGreater(gti_Timer_19,33)) then											
								trans HellState1;	
						endif;
		endcase;

		case 3:											//
						if (TimeGreater(gti_Timer_19,41)) then											
								trans HellState1;	
						endif;
		endcase;

		case 4:										//	
			//TalonLaunch			= TRUE;				 *************Not until done
			//PlayVoiceOverOnce("vox\op1\mi4\steiner", TALKER_MAN);			//
						if (TimeGreater(gti_Timer_19,47)) then											
								trans HellState1;	
						endif;
		endcase;

		case 5:											//
						if (TimeGreater(gti_Timer_19,51)) then											
				LaunchedALL			= TRUE;
								trans HellState1;	
						endif;
		endcase;
	
	endswitch;

endstate;

endfsm.
