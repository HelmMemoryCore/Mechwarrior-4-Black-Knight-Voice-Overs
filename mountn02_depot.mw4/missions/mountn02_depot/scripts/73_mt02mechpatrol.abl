
//*********************************************************************************
//The below line MUST be changed in order for the script to be considered
//a unique entity.  The word Patrol must be changed to some other unique identifier
fsm Mt02MechPatrol : integer;

//This unit patrols a specific path and attacks anything that comes near it.
//------------------------------------------------------------------
//
//     Constant Definitions
//
//------------------------------------------------------------------
	const
		#include_ <content\ABLScripts\mwconst.abi>

//------------------------------------------------------------------
//
//     Type Definitions
//
//------------------------------------------------------------------
	type
		#include_ <content\ABLScripts\mwtype.abi>
	

//------------------------------------------------------------------
//
//     Variable Declarations
//
//------------------------------------------------------------------
	var
	static integer			attackrange; 			// When do I start shooting?
																
	static integer			piloting; 				// piloting skill
	static integer			gunnery; 					// hit chance,
	static real					mindelay;					//minimum amount of time I will wait between shots once a weapon is reloaded
	static real					maxdelay;					//maximum amount of time I will wait between shots once a weapon is reloaded
	static integer 			speed;			 			// What speed so I move at?
	static integer 			elitelevel; 			// % elite chance, This helps determine tactics, defensive manuevers, opportunity fire
																				// and other things that would normally be determined by combat experience

 	static integer			isshotradius;			//how far away from me will I detect an enemy shot.
	static integer			movetype;					//how will it move down the path?

	static Boolean 			attacksoundplayed;
	static integer 			attacksound; 			// plays when it first attacks
	static integer 			deathsound; 			// plays when it dies
	
	static integer			mood;							//What is my normal mood?
	
	static Boolean			Resumed;					//Have I gotten to the end of the path?
	static Boolean			reachedendofpath;				//Have I gotten to the end of the path?
																							//Note: This only gets set if movetype is set to move_nocycle.
	static integer			path;						 				//what path am I following?
	static Boolean 			attackersdistractit;		// if FALSE, it won't leave the path, even when things
																							// are shooting it. It will shoot back. Defaults to true
																							// Once unit reaches the end of the path, It attacks freely.
	static Boolean 			Elite;								 //These guys will be teleported around
	
	static integer			teleportNav;					 //All the elites will have this value set to a different Nav
	
	static ObjectID 		myVehicle;
//------------------------------------------------------------------
//
//     Local Functions
//
//------------------------------------------------------------------

function init;
	code
	 				
 	switch (GetMemoryInteger(me,9))

	case 1:															 //South West
	
		attackrange					= 750;
		piloting 				 	= 70;				
		gunnery 				 	= 50;					
		mindelay 					= 0.5;				
		maxdelay 					= 1.0;				
		speed 						= 60;						
		elitelevel 					= 60;			
		IsShotRadius 				= 80;
		movetype 					= move_circle;
		AttackersDistractIt         = True;
		Mood 						= neutral_start;
		path 						= epa_Path_SW;
		ReachedEndOfPath 		    = False;
		Resumed 					= False;
		Attacksoundplayed 	        = False;					
		
	endcase;
		
	case 2:															 //South East
		                    //thanatos_0000
		attackrange         = 750;
		piloting            = 70;
		gunnery             = 50;
		mindelay            = 0.5;
		maxdelay            = 1.0;
		speed               = 60;
		elitelevel          = 60;
		IsShotRadius        = 80;
		movetype            = move_circle;
		AttackersDistractIt = True;
		Mood                = neutral_start;
		path 				= epa_Path_SE;
		ReachedEndOfPath    = False;
		Resumed             = False;
		Attacksoundplayed   = False;
		
	endcase;
		
	case 3:						 									//Factory Gaurd
		
		attackrange         = 750;
		piloting            = 70;
		gunnery             = 50;
		mindelay            = 0.5;
		maxdelay            = 1.0;
		speed               = 60;
		elitelevel          = 60;
		IsShotRadius        = 80;
		movetype            = move_circle;
		AttackersDistractIt = True;
		Mood                = neutral_start;
		path 				= epa_Path_Factory;
		ReachedEndOfPath    = False;
		Resumed             = False;
		Attacksoundplayed   = False;
		
	endcase;
		
	case 4:						 									//Mech Repair
		
		attackrange         = 750;
		piloting            = 70;
		gunnery             = 50;
		mindelay            = 0.5;
		maxdelay            = 1.0;
		speed               = 60;
		elitelevel          = 60;
		IsShotRadius        = 80;
		movetype            = move_circle;
		AttackersDistractIt = True;
		Mood                = neutral_start;
		path 				= epa_Path_MechRepair;
		ReachedEndOfPath    = False;
		Resumed             = False;
		Attacksoundplayed   = False;
		
	endcase;
		
	case 5:															 //Weapon Warehouse
	
		attackrange         = 750;
		piloting            = 70;
		gunnery             = 50;
		mindelay            = 0.5;
		maxdelay            = 1.0;
		speed               = 60;
		elitelevel          = 60;
		IsShotRadius        = 80;
		movetype            = move_circle;
		AttackersDistractIt = True;
		Mood                = neutral_start;
		path 				= epa_Path_WeaponHouse;
		ReachedEndOfPath    = False;
		Resumed             = False;
		Attacksoundplayed   = False;
		
	endcase;
		
	case 6:															 //North West
		
		attackrange         = 750;
		piloting            = 70;
		gunnery             = 50;
		mindelay            = 0.5;
		maxdelay            = 1.0;
		speed               = 60;
		elitelevel          = 60;
		IsShotRadius        = 80;
		movetype            = move_circle;
		AttackersDistractIt = True;
		Mood                = neutral_start;
		path 				= epa_Path_NW;
		ReachedEndOfPath    = False;
		Resumed             = False;
		Attacksoundplayed   = False;
		
	endcase;
		
/*	case 9:						 									//Center Atlas
		
		attackrange         = 850;
		piloting            = 90;
		gunnery             = 70;
		mindelay            = 0.5;
		maxdelay            = 1.0;
		speed               = 60;
		elitelevel          = 70;
		IsShotRadius        = 80;
		movetype            = move_circle;
		AttackersDistractIt = True;
		Mood                = neutral_start;
		path 								= epa_Path_Center;
		ReachedEndOfPath    = False;
		Resumed             = False;
		Attacksoundplayed   = False;
		
	endcase;
*/	
	case 11:															//Elite1
	
		attackrange					= 750;
		piloting 				 		= 70;				
		gunnery 				 		= 60;					
		mindelay 						= 0.5;				
		maxdelay 						= 1.0;				
		speed 							= 60;						
		elitelevel 					    = 70;			
		IsShotRadius 				    = 80;
		movetype 						= move_nocycle;
		AttackersDistractIt             = False;
		Mood 							= neutral_start;
		path 							= epa_Path_MechRepair;
		ReachedEndOfPath 		        = False;
		Resumed 						= False;
		Attacksoundplayed 	            = False;					
		Elite							=	True;
		teleportnav 				    = ena_navElite1;								//Kick some Salvage Ass
		myVehicle						= eve_Cargotrack1;
		
	endcase;
		
	case 12:															//Elite2
		
		attackrange					    = 750;
		piloting 				 		= 70;				
		gunnery 				 		= 60;					
		mindelay 						= 0.5;				
		maxdelay 						= 1.0;				
		speed 							= 60;						
		elitelevel 					    = 70;			
		IsShotRadius 				    = 80;
		movetype                        = move_nocycle;
		AttackersDistractIt             = False;
		Mood                            = neutral_start;
		path 							= epa_Path_WeaponHouse;
		ReachedEndOfPath                = False;
		Resumed                         = False;
		Attacksoundplayed               = False;
		Elite							=	True;
		teleportnav 				    = ena_navElite2;								//Kick some Salvage Ass
		myVehicle						= eve_Cargotrack2;
		
	endcase;
		
	case 13:						 								//Elite3
		
		attackrange					    = 750;
		piloting 				 		= 70;				
		gunnery 				 		= 60;					
		mindelay 						= 0.5;				
		maxdelay 						= 1.0;				
		speed 							= 60;						
		elitelevel 					    = 70;			
		IsShotRadius 				    = 80;
		movetype                        = move_nocycle;
		AttackersDistractIt             = False;
		Mood                            = neutral_start;
		path 							= epa_Path_Factory;
		ReachedEndOfPath                = False;
		Resumed                         = False;
		Attacksoundplayed               = False;
		Elite							=	True;
		teleportnav 				    = ena_navElite3;				//Kick some Salvage Ass
		myVehicle						= eve_Cargotrack3;
		
	endcase;
		
	endswitch;
 	
endfunction;

//------------------------------------------------------------------
//
//     Main Code
//				
//								
//------------------------------------------------------------------
state startState;

	code
		SetFiringDelay					(me,mindelay,maxdelay);
		setignorefriendlyfire		    (me,true);
		setisshotradius					(me,isshotradius);
		setentropymood					(me,mood);
		setcurmood						(me,mood);
		setskilllevel					(me,piloting,gunnery,elitelevel);
		//setsearchlight				(me,on);
		//startexecute					(me);
		//setalignment					(me,enemy);
		
		if (Elite == True) then
			shutdown(me);
			TeleportToHell(me);
			trans hangout;
		else
			trans patrol;
		endif;
endstate;			

state deadState;
  code
		if (deathsound <> -1) then	
			PlaySoundOnce(deathsound);
		endif;		
						
		orderDie;
endstate;

state hangout;
		
	var
		LocPoint my_nav;
	
  code
		
		If (ShadowcatTime == true) then
			startup(me);
			GetLocation(TeleportNav,my_nav);
			Teleport(me,my_nav);
			orderMovetoObject(playermech,600);
  		setTarget(me,playermech);
			trans SalvageKillas;
		endif;
						
endstate;
	
	state SalvageKillas;
		
		code

		speed = 600;
		
		SetTargetDesirability(myVehicle,100);
				
		//the ever popular attack order
    orderAttack (attackersdistractit);
				
		//maybe swap targets when I am shot.
		if ((isShot (me)) and (rand(0,75) <= 1)) then
  		setTarget(me,whoShot(me));
		endif;
 								
		//Find me a target
		if (setmytarget(attackrange)) then
			trans attack;
	 	endif;
	
	endstate;
	
	state patrol;

  var
    ObjectID foe;

		code

		If (SalvageStartAll == TRUE) then
			trans RunAway;
		endif;
	
	//head down the path.  If this has already been done
	// or if there is no path set then look around.
			if ((path <> -1) and (reachedendofpath == FALSE)) then
					if ((orderMoveto(path,speed,movetype,true,true)) == TRUE) then
						reachedendofpath = TRUE;
					endif; 			
			else	 		 		
				ordermovelookout;			
			endif;
			
		//Find me a target
		if (setmytarget(attackrange)) then
			trans attack;
	 	endif;
			
	endstate;

	state RunAway;

		code

	orderstopattacking;						//9-21
	
	if ((orderMovetoObject(ena_Drop_Zone,600)) == TRUE) then
		shutdown(me);
	endif; 			
			
	endstate;

//------------------------------------------------------------------
//
//     attack state : description
//
//------------------------------------------------------------------
	state attack;
		
		code

		speed = 600;
		
	If (Elite == FALSE) then
		If (MechsRun == TRUE) then
			trans RunAway;
		endif;
	endif;
		
		If (Elite == TRUE) then
			PlayVoiceOverOnce("vox\op3\mi2\patrol", TALKER_RAD);		//
		endif;
		
		if (LeaveAttackState(attackrange*2)) then
			orderstopattacking;
			orderMoveResumePatrol(path,speed,movetype,true,true);
			trans patrol;
		endif;
		
		//the ever popular attack order
    orderAttack (attackersdistractit);
		
		//play the attack sound if one exists
		if ((attacksound <> -1) and (attacksoundplayed == FALSE)) then	
			attacksoundplayed = true;
			PlaySoundOnce(attacksound);
		endif;	
		
		//maybe swap targets when I am shot.
		if ((isShot (me)) and (rand(0,75) <= 1)) then
  		setTarget(me,whoShot(me));
		endif;
 								
	endstate;

endfsm.
//******************************************************************

