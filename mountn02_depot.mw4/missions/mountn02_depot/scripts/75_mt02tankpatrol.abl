
//*********************************************************************************
//The below line MUST be changed in order for the script to be considered
//a unique entity.  The word Patrol must be changed to some other unique identifier
fsm Mt02TankPatrol : integer;

//This unit patrols a specific path and attacks anything that comes near it.
//------------------------------------------------------------------
//
//     Constant Definitions
//
//------------------------------------------------------------------
	const
		#include_ <content\ABLScripts\mwconst.abi>

//------------------------------------------------------------------
//
//     Type Definitions
//
//------------------------------------------------------------------
	type
		#include_ <content\ABLScripts\mwtype.abi>
	

//------------------------------------------------------------------
//
//     Variable Declarations
//
//------------------------------------------------------------------
	var
	static integer			attackrange; 			// When do I start shooting?
																
	static integer			piloting; 				// piloting skill
	static integer			gunnery; 					// hit chance,
	static real					mindelay;					// minimum amount of time I will wait between shots once a weapon is reloaded
	static real					maxdelay;					// maximum amount of time I will wait between shots once a weapon is reloaded
	static integer 			speed;			 			// What speed so I move at?
	static integer 			elitelevel; 			// % elite chance, This helps determine tactics, defensive manuevers, opportunity fire
																				// and other things that would normally be determined by combat experience

 	static integer			isshotradius;			// how far away from me will I detect an enemy shot.
	static integer			movetype;					// how will it move down the path?

	static Boolean 			attacksoundplayed;
	static integer 			attacksound; 			// plays when it first attacks
	static integer 			deathsound; 			// plays when it dies
	
	static integer			mood;							// What is my normal mood?
	
	static Boolean			Resumed;					// Have I gotten to the end of the path?
	static Boolean			reachedendofpath;				// Have I gotten to the end of the path?
																							// Note: This only gets set if movetype is set to move_nocycle.
	static integer			path;						 				// what path am I following?
	static Boolean 			attackersdistractit;		// if FALSE, it won't leave the path, even when things
																							// are shooting it. It will shoot back. Defaults to true
																							// Once unit reaches the end of the path, It attacks freely.

	static integer			Base;							// Where is my Base?  Am i too good for my HOME?
	
	static Boolean 			Secret;						// They are Powered down in Ambush
	static Boolean 			Waiters;					// They are Powered down in Ambush
	
	static integer			takeOffDistance;	// My take-off distance if I'm an airplane (ignored if not an airplane)
	
//------------------------------------------------------------------
//
//     Local Functions
//
//------------------------------------------------------------------

function init;
	code
	
	//These variables should not be changed by the designer without good reason
		reachedendofpath 		= FALSE;						 			//false
		attacksoundplayed 	= FALSE;									//false
		attacksound 				= -1;
		deathsound 					= -1;
		Secret 							= FALSE;									//They are not in hiding
		Waiters 						= FALSE;									//They will not get you a coke
	
		takeOffDistance			= 150;
	
	//Use this to set different values for different units using the same brain	
	switch (GetMemoryInteger(me,9))

		case 1:															 //					Nightshades on Charge
		
		attackrange         = 750;
		piloting            = 50;
		gunnery             = 50;
		mindelay            = 0.5;
		maxdelay            = 1.0;
		speed               = 60;
		elitelevel          = 60;
		IsShotRadius        = 80;
		movetype            = move_circle;
		AttackersDistractIt = True;
		Mood                = neutral_start;
		path 								= epa_Path_Charge;
		ReachedEndOfPath    = False;
		Resumed             = False;
		Attacksoundplayed   = False;
		takeOffDistance			= 150;
		
		endcase;
		
		case 2:																 //				Magi-Tanks on Charge
				
		attackrange         = 750;
		piloting            = 50;
		gunnery             = 50;
		mindelay            = 0.5;
		maxdelay            = 1.0;
		speed               = 60;
		elitelevel          = 60;
		IsShotRadius        = 80;
		movetype            = move_circle;
		AttackersDistractIt = True;
		Mood                = neutral_start;
		path 								= epa_Path_Charge;
		ReachedEndOfPath    = False;
		Resumed             = False;
		Attacksoundplayed   = False;
		
		endcase;
		
		case 3:																 //				Bulldogs on Charge
				
		attackrange         = 750;
		piloting            = 50;
		gunnery             = 50;
		mindelay            = 0.5;
		maxdelay            = 1.0;
		speed               = 60;
		elitelevel          = 60;
		IsShotRadius        = 80;
		movetype            = move_circle;
		AttackersDistractIt = True;
		Mood                = neutral_start;
		path 								= epa_Path_Charge;
		ReachedEndOfPath    = False;
		Resumed             = False;
		Attacksoundplayed   = False;
		
		endcase;
		
		case 7:															 //					Nightshades on Mountain
		
		attackrange         = 750;
		piloting            = 50;
		gunnery             = 50;
		mindelay            = 0.5;
		maxdelay            = 1.0;
		speed               = 60;
		elitelevel          = 60;
		IsShotRadius        = 80;
		movetype            = move_circle;
		AttackersDistractIt = True;
		Mood                = neutral_start;
		path 								= epa_Path_Flight;
		ReachedEndOfPath    = False;
		Resumed             = False;
		Attacksoundplayed   = False;
		takeOffDistance			= 150;
		
		endcase;
		
	endswitch;

endfunction;

//------------------------------------------------------------------
//
//     Main Code
//
//------------------------------------------------------------------
state startState;

	code
		
		SetFiringDelay					(me,mindelay,maxdelay);
		setignorefriendlyfire		(me,true);
		setisshotradius					(me,isshotradius);
		setentropymood					(me,mood);
		setcurmood							(me,mood);
		setskilllevel						(me,piloting,gunnery,elitelevel);
		//setsearchlight				(me,on);
		//startexecute					(me);
		//setalignment					(me,enemy);
		
		
	if (orderTakeOff(takeOffDistance) == true) then	
		if (secret == true) then
			shutdown(me);
			trans hangout;
		else
			trans patrol;
		endif;
	endif;

endstate;			

state deadState;
  code
		if (deathsound <> -1) then	
			PlaySoundOnce(deathsound);
		endif;
		
		If (Waiters == true) then
				Engaged = True;
		endif;		
						
		orderDie;
endstate;

state Hangout;
  code

				If ((isShot (me)))	then
					startup(me);
					trans patrol;
				endif;
				
				if ((iswithin(me,(groupobjectid(1)),300)) == true) then
					startup(me);
					trans patrol;
				endif;
						
				If (Engaged == true) then
					startup (me);
					trans patrol;
				endif;

endstate;

	state patrol;

  var

		ObjectID foe;

		code

	
	//Head down the path.  If this has already been done
	//or if there is no path set then look around
			if ((path <> -1) and (reachedendofpath == FALSE)) then
					if ((orderMoveto(path,speed,movetype,true,true)) == TRUE) then
						reachedendofpath = TRUE;
					endif; 			
			else	 		 		
				OrderMoveToObject((playermech),200);			
			endif;
			
		//Find me a target
			if (setmytarget(attackrange)) then
				trans attack;
			endif;
			
	endstate;

	state RunAway;

		code

	orderstopattacking;           //9-21
	
	if ((orderMovetoObject(ena_Drop_Zone,600)) == TRUE) then
		shutdown(me);
	endif; 			
			
	endstate;

//------------------------------------------------------------------
//
//     attack state : description
//
//------------------------------------------------------------------
	state attack;
		
		code
		
		If (missionwon == TRUE) then
	        orderstopattacking;           //9-12
			trans RunAway;
		endif;
			
		if (LeaveAttackState(attackrange*3/2)) then
			orderstopattacking;
			orderMoveResumePatrol(path,speed,movetype,true,attackersdistractit);
			trans patrol;
		endif;
		
		//the ever popular attack order
    orderAttack (attackersdistractit);
		
		//if the ridge tanks are in a fight, then the ambush is set
		If (Waiters == true) then
				Engaged = True;
				Waiters = False;
		endif;
		
		
		//maybe swap targets when I am shot
		if ((isShot (me)) and (rand(0,75) <= 1)) then
  		setTarget(me,whoShot(me));
		endif;
 			
					
	endstate;


endfsm.
//******************************************************************

